<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>sogeti.cir.fsn</groupId>
	<artifactId>fsn-revolution</artifactId>
	<version>5.0.0-SNAPSHOT</version>
	<packaging>pom</packaging>

	<name>FSN RÃ©volution</name>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>1.8</java.version>

		<docker.image.prefix>fichestrati</docker.image.prefix>

		<guava.version>22.0-rc1</guava.version>
		<spring-cloud.version>Finchley.RELEASE</spring-cloud.version>
	</properties>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.0.2.RELEASE</version>
		<relativePath />
	</parent>
	
	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>com.google.guava</groupId>
				<artifactId>guava</artifactId>
				<version>${guava.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>${spring-cloud.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			
			<!-- https://mvnrepository.com/artifact/org.apache.commons/commons-math3 -->
			<dependency>
			    <groupId>org.apache.commons</groupId>
			    <artifactId>commons-math3</artifactId>
			    <version>3.6.1</version>
			</dependency>
			
		</dependencies>
	</dependencyManagement>

	<modules>
		<module>fsn-admin</module>
		<module>fsn-auth</module>
		<module>fsn-cloud</module>
		<module>fsn-gateway</module>
		<module>fsn-fouille</module>
		<module>fsn-gestion-site</module>
		<module>fsn-management</module>
		<module>fsn-model</module>
	</modules>
	

	<build>
		<finalName>${project.artifactId}</finalName>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
			</resource>
		</resources>
		
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-maven-plugin</artifactId>
					<executions>
						<execution>
							<goals>
								<goal>repackage</goal>
								<goal>build-info</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>com.spotify</groupId>
					<artifactId>docker-maven-plugin</artifactId>
					<version>1.0.0</version>
					<executions>
						<execution>
							<id>docker-build</id>
							<phase>install</phase>
							<goals>
								<goal>removeImage</goal>
								<goal>build</goal>
							</goals>
							<configuration>
								<imageName>${docker.image.prefix}/${project.artifactId}</imageName>
								<!--
								<image>${docker.image.prefix}/${project.artifactId}</image>
								<newName>${docker.image.prefix}/${project.artifactId}</newName>
								-->
								<forceTags>true</forceTags>
								<imageTags>
									<imageTag>${project.version}</imageTag>
									<imageTag>latest</imageTag>
								</imageTags>
								<dockerDirectory>${project.basedir}/src/main/docker</dockerDirectory>
								<resources>
									<resource>
										<targetPath>/</targetPath>
										<directory>${project.build.directory}</directory>
										<include>${project.build.finalName}.jar</include>
									</resource>
								</resources>
							</configuration>
						</execution>
						<execution>
							<id>docker-push</id>
							<phase>install</phase>
							<goals>
								<goal>push</goal>
							</goals>
							<configuration>
								<serverId>docker</serverId>
								<imageName>${docker.image.prefix}/${project.artifactId}</imageName>
							</configuration>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-resources-plugin</artifactId>
					<configuration>
						<delimiters>
							<delimiter>@</delimiter>
						</delimiters>
						<useDefaultDelimiters>false</useDefaultDelimiters>
						<nonFilteredFileExtensions>
							<nonFilteredFileExtension>p12</nonFilteredFileExtension>
							<nonFilteredFileExtension>jks</nonFilteredFileExtension>
							<nonFilteredFileExtension>svg</nonFilteredFileExtension>
							<nonFilteredFileExtension>eot</nonFilteredFileExtension>
							<nonFilteredFileExtension>woff</nonFilteredFileExtension>
							<nonFilteredFileExtension>woff2</nonFilteredFileExtension>
							<nonFilteredFileExtension>ttf</nonFilteredFileExtension>
						</nonFilteredFileExtensions>
					</configuration>
					<executions>
						<execution>
							<id>copy-resources</id>
							<phase>prepare-package</phase>
							<goals>
								<goal>copy-resources</goal>
							</goals>
							<configuration>
								<outputDirectory>${project.build.outputDirectory}/static/docs</outputDirectory>
								<resources>
									<resource>
										<directory>${project.build.directory}/generated-docs</directory>
									</resource>
								</resources>
							</configuration>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.asciidoctor</groupId>
					<artifactId>asciidoctor-maven-plugin</artifactId>
					<version>${asciidoctor-maven-plugin.version}</version>
					<executions>
						<execution>
							<id>generate-docs</id>
							<phase>prepare-package</phase>
							<goals>
								<goal>process-asciidoc</goal>
							</goals>
							<configuration>
								<backend>html</backend>
								<doctype>book</doctype>
								<attributes>
									<snippets>${project.build.directory}/generated-snippets</snippets>
								</attributes>
							</configuration>
						</execution>
					</executions>
				</plugin>
			</plugins>
		</pluginManagement>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-enforcer-plugin</artifactId>
				<executions>
					<execution>
						<id>enforce-versions</id>
						<goals>
							<goal>enforce</goal>
						</goals>
						<configuration>
							<rules>
								<requireMavenVersion>
									<version>${maven.version}</version>
								</requireMavenVersion>
								<requireJavaVersion>
									<version>${java.version}</version>
								</requireJavaVersion>
							</rules>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-site-plugin</artifactId>
				<version>3.6</version>
				<configuration>
					<locales>fr,en</locales>
				</configuration>
				<dependencies>
				<dependency><!-- add support for ssh/scp -->
					<groupId>org.apache.maven.wagon</groupId>
					<artifactId>wagon-ssh</artifactId>
					<version>RELEASE</version>
					</dependency>
				</dependencies>
			</plugin>
		</plugins>
	</build>

	<reporting>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>RELEASE</version>
				<configuration>
					<doclet>org.umlgraph.doclet.UmlGraphDoc</doclet>
					<!-- <docletPath>/path/to/UmlGraph.jar</docletPath> -->
					<docletArtifact>
						<groupId>org.umlgraph</groupId>
						<artifactId>umlgraph</artifactId>
						<version>RELEASE</version>
					</docletArtifact>
					<additionalparam>-views</additionalparam>
					<useStandardDocletOptions>true</useStandardDocletOptions>
				</configuration>
			</plugin>
			<plugin>
				<groupId>com.github.ferstl</groupId>
				<artifactId>depgraph-maven-plugin</artifactId>
				<version>RELEASE</version>
			</plugin>
		</plugins>
	</reporting>
	
	<distributionManagement>
		<site>
			<id>doc.back.fichestrati.fr</id>
			<url>file:///projet/jenkins/fsn/doc/back/</url>
		</site>
	</distributionManagement>
</project>